{"ast":null,"code":"var _jsxFileName = \"/Volumes/externo/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    }\n  });\n\n  if (!props.isAuth) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const todaysCheckin = await db.collection('markers').doc('2020-04-11').collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      forceCreate = false;\n    }\n\n    console.log(todaysCheckin.data());\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/Volumes/externo/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","JSON","stringify","getServerSideProps","req","res","session","getSession","todaysCheckin","collection","doc","user","sub","get","todaysData","data","forceCreate","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,EAAT,QAAmB,WAAnB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACjBL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACK,KAAK,CAACC,MAAV,EAAiB;AACbJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACH;AACJ,GAJQ,CAAT;;AAKA,MAAG,CAACF,KAAK,CAACC,MAAV,EAAiB;AACb,WAAO,IAAP;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,IAAI,CAACC,SAAL,CAAeJ,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFJ,CADJ;AAMH,CAfD;;AAgBA,eAAeD,GAAf;AAEA,OAAO,eAAeM,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAAgD;AACnD,QAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,UAAN,CAAiBH,GAAjB,CAAtB;;AACA,MAAGE,OAAH,EAAY;AACR,UAAME,aAAa,GAAG,MAAMZ,EAAE,CAC7Ba,UAD2B,CAChB,SADgB,EAE3BC,GAF2B,CAEvB,YAFuB,EAG3BD,UAH2B,CAGhB,QAHgB,EAI3BC,GAJ2B,CAIvBJ,OAAO,CAACK,IAAR,CAAaC,GAJU,EAK3BC,GAL2B,EAA5B;AAOA,UAAMC,UAAU,GAAGN,aAAa,CAACO,IAAd,EAAnB;AACA,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAGF,UAAH,EAAe;AACXE,MAAAA,WAAW,GAAG,KAAd;AACH;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYV,aAAa,CAACO,IAAd,EAAZ;AAEA,WAAO;AACHjB,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE,IADL;AAEHY,QAAAA,IAAI,EAAEL,OAAO,CAACK,IAFX;AAGHK,QAAAA;AAHG;AADJ,KAAP;AAOH;;AACD,SAAO;AACHlB,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE,KADL;AAEHY,MAAAA,IAAI,EAAE;AAFH;AADJ,GAAP;AAOH","sourcesContent":["import React, { useEffect } from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\nimport { db } from '../lib/db'\n\nconst App = props => {\n    useEffect(() => {\n        if(!props.isAuth){\n            router.push('/')\n        }\n    })\n    if(!props.isAuth){\n        return null\n    }\n    return (\n        <div>\n            <h1>App</h1>\n            <pre>{JSON.stringify(props, null, 2)}</pre>\n        </div>   \n    )\n}\nexport default App\n\nexport async function getServerSideProps({ req, res }) {\n    const session = await auth0.getSession(req)\n    if(session) {\n        const todaysCheckin = await db\n        .collection('markers')\n        .doc('2020-04-11')\n        .collection('checks')\n        .doc(session.user.sub)\n        .get()\n\n        const todaysData = todaysCheckin.data()\n        let forceCreate = true\n        if(todaysData) {\n            forceCreate = false\n        }\n\n        console.log(todaysCheckin.data())\n        \n        return {\n            props: {\n                isAuth: true,\n                user: session.user,\n                forceCreate\n            }\n        }   \n    }\n    return {\n        props: {\n            isAuth: false,\n            user: {}\n        }\n    } \n\n}"]},"metadata":{},"sourceType":"module"}