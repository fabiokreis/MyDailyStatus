{"ast":null,"code":"var _jsxFileName = \"/Volumes/externo/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Status pr\\xF3ximos  a voc\\xEA:\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }\n    }, checkin.id === props.user.sub && 'Seu status: '), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }\n    }, checkin.status), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }\n    }, JSON.stringify(checkin.coords)), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }, checkin.distance));\n  })));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    console.log(todaysCheckin);\n    let forceCreate = true;\n\n    if (todaysData) {\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(todaysData.coordinates.latitude, todaysData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude).toFixed(2)\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/Volumes/externo/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","distance","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","user","sub","status","JSON","stringify","coords","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","get","todaysData","data","console","log","near","center","coordinates","radius","checkinsList","docs","forEach","lat","latitude","long","longitude","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\nimport { db } from '../lib/db'\nimport { distance } from '../lib/geo'\n\nconst App = props => {\n    useEffect(() => {\n        if(!props.isAuth){\n            router.push('/')\n        }else if(props.forceCreate){\n            router.push('/create-status')\n        }\n    })\n    if(!props.isAuth || props.forceCreate){\n        return null\n    }\n    return (\n        <div>\n            <h1>Status próximos  a você:</h1>\n            <table>\n                { \n                    props.checkins.map(checkin => {\n                        return (\n                            <tr>\n                                <td>{checkin.id === props.user.sub && 'Seu status: '}</td>\n                                <td>{checkin.status}</td>\n                                <td>{JSON.stringify(checkin.coords)}</td>\n                                <td>{checkin.distance}</td>\n                            </tr>\n                        )\n                    }) \n                }\n            </table>\n        </div>   \n    )\n}\nexport default App\n\nexport async function getServerSideProps({ req, res }) {\n    const session = await auth0.getSession(req)\n    if(session) {\n        const today = new Date()\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\n        const todaysCheckin = await db\n        .collection('markers')\n        .doc(currentDate)\n        .collection('checks')\n        .doc(session.user.sub)\n        .get()\n\n        const todaysData = todaysCheckin.data()\n        console.log(todaysCheckin)\n        let forceCreate = true\n        if(todaysData) {\n            forceCreate = false\n            const checkins = await db\n            .collection('markers')\n            .doc(currentDate)\n            .collection('checks')\n            .near({\n                center: todaysData.coordinates,\n                radius: 1000\n            })\n            .get()\n\n            const checkinsList = []\n            checkins.docs.forEach(doc => {\n                checkinsList.push({\n                    id: doc.id,\n                    status: doc.data().status,\n                    coords: {\n                        lat: doc.data().coordinates.latitude,\n                        long: doc.data().coordinates.longitude\n                    },\n                    distance: distance(\n                        todaysData.coordinates.latitude, \n                        todaysData.coordinates.longitude,\n                        doc.data().coordinates.latitude,\n                        doc.data().coordinates.longitude\n                        ).toFixed(2)\n                })\n            })\n            return {\n                props: {\n                    isAuth: true,\n                    user: session.user,\n                    forceCreate: false,\n                    checkins: checkinsList\n                }\n            } \n        }\n        return {\n            props: {\n                isAuth: true,\n                user: session.user,\n                forceCreate\n            }\n        }   \n    }\n    return {\n        props: {\n            isAuth: false,\n            user: {}\n        }\n    } \n\n}"]},"metadata":{},"sourceType":"module"}